06_Log4j.txt

# Log4j 

  - 자바에서 로그를 효율적으로 남기기 위한 라이브러리 
  - 디버그, 로깅 등의 용도로 사용된다
  - Logger    : 로그 메세지를 Appender에게 전달한다
  - Appender  : 자기가 맡은 위치에 전달받은 로그를 추가한다
  - Layout    : 로그를 어떤 형식으로 기록할지 설정한다 
     
     
# Spring legacy Project의 기본 log4j.xml 빨간줄없애기 
     
  2번째 줄 수정 
  <!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
  
# Logging Level
  
  - OFF   : 로그를 끔
  - FATAL : 치명적인 에러
  - ERROR : 에러
  - WARN  : 주의 
  - INFO  : 일반 정보
  - DEBUG : 디버깅 정보
  - TRACE : 더 자세한 디버깅 정보
  - ALL   : 모든 로그를 보여줌
  
  로거에 로깅 레벨을 설정하면, 로거는 설정한 레벨 이상으로 중요한 로그들만 수집하게 된다
  
# PatternLayout 서식문자 정리

  - %c, %logger 				: 해당 로그를 쓰는 로거의 이름.
  - %C, %class 					: 해당 로그를 요청한 클래스 이름
  - %d, %date 					: 해당 로그가 발생한 시간
  - %enc, %encode 				: 특정 언어에서의 출력을 위한 문자 인코딩
  - %ex, %exception, %throwable : 예외 로그. 길이를 설정할 수 있음.
  - %F, %file 					: 해당 로그가 발생한 클래스 파일명
  - %l, %location 				: 해당 로그가 발생한 클래스명.메소드명(파일:라인)
  - %L, %line 					: 해당 로그가 발생한 라인 번호
  - %m, %msg, %message 			: 로그문에 전달된 메시지
  - %n 							: 줄바꿈
  - %p, %level 					: 로그 레벨
  - %r, %relative 				: 로그 처리시간
  - %t, %thread 				: 해당 로그가 발생한 스레드명
  - %style{pattern}{ANSI style} : ANSI를 사용해 특정 패턴을 스타일링함
  - %highlight{pattern}{style} 	: 로그 레벨명을 ANSI 색깔로 하이라이트















  